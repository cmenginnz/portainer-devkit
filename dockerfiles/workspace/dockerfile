FROM portainer/agent:alpine as original_agent

FROM cr.portainer.io/portainer/dev-toolkit:2021.11

# Install system requirements
RUN apt install -y --no-install-recommends \
    less \
    augeas-tools \
    rsync \
    iproute2 \
    psmisc \
    tmux \
    grunt \
    netcat \
    sshpass \
    iputils-ping && \
    apt autoremove -y && \
    apt clean

RUN apt update && apt install -y --no-install-recommends \
    vim \
    openssh-server && \
    apt autoremove -y && \
    apt clean

# install kind
RUN curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.11.1/kind-linux-amd64 && \
    install kind /usr/local/bin/ && \
    rm kind

# install kubectl
COPY --from=original_agent /app/kubectl /usr/bin/

# the owner of .openvscode-server is root
RUN chown -R openvscode-server:openvscode-server /home/workspace/.openvscode-server

#
# use openvscode-server user from this point
USER openvscode-server

# init ssh
RUN mkdir /home/workspace/.ssh && echo "StrictHostKeyChecking accept-new" >> /home/workspace/.ssh/config

# init bashrc
COPY --chown=openvscode-server:openvscode-server devkit/bashrc/bashrc /home/workspace/.bashrc
COPY --chown=openvscode-server:openvscode-server devkit/bashrc/dir_colors /home/workspace/.dir_colors

# install go tools
ENV GOPATH=/home/workspace/go
RUN go install github.com/uudashr/gopkgs/v2/cmd/gopkgs@latest
RUN go install github.com/ramya-rao-a/go-outline@latest
RUN go install github.com/cweill/gotests/gotests@latest
RUN go install github.com/fatih/gomodifytags@latest
RUN go install github.com/josharian/impl@latest
RUN go install github.com/haya14busa/goplay/cmd/goplay@latest
RUN go install github.com/go-delve/delve/cmd/dlv@master
RUN go install honnef.co/go/tools/cmd/staticcheck@latest
RUN go install golang.org/x/tools/gopls@latest
RUN go install github.com/br0xen/boltbrowser@latest

# copy some binary files such as `docker` from original agent image
COPY --from=original_agent --chown=openvscode-server:openvscode-server /app /home/workspace/app
RUN rm /home/workspace/app/agent

# copy entry.sh and it's libs
USER root
COPY devkit /devkit
WORKDIR /devkit
ENTRYPOINT ["/devkit/entry.sh"]
