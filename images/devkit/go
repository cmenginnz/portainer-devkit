#!/usr/bin/env sh

set -x

docker stop portainer-devkit
docker rm portainer-devkit

docker run -d --rm \
--name portainer-devkit \
--network portainer-devkit \
-e DEVKIT_DEBUG=true \
--ip 192.168.100.10 \
-p 3000:3000 \
-v "/home/simon/workspace:/home/workspace" \
-v /var/run/docker.sock:/var/run/docker.sock \
-v /var/lib/docker/volumes:/var/lib/docker/volumes \
mcpacino/portainer-devkit:dev

sleep 3
docker exec -it portainer-devkit bash



#docker stop portainer-builder
#
#docker network inspect portainer-builder >/dev/null || docker network create --driver=bridge --subnet="$SUBNET" --gateway="$GATEWAY" portainer-builder && sleep 3
#
#docker run --name portainer-builder --network portainer-builder --ip "$DEVKIT_IP" -p 9000:9000 -p 2345:2345 -d --rm -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/docker/volumes:/var/lib/docker/volumes -v /home/simon/Work/vs/portainer:/portainer -v /home/simon/Work/vs/data/ce:/data -v /home/simon/Work/vs/agent:/agent -v /home/simon/Work/ssh-server/image-builder/scripts:/s mcpacino/portainer-builder:latest && sleep 3

#docker run \
#    --name portainer-builder \
#    -d --rm \
#    -v /home/simon/Work/ssh-server/image/entry.sh:/new.entry.sh \
#    mcpacino/portainer-builder:latest


# install kubectl
# curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
# sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

# curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
# mkdir -p /usr/local/bin/
# install minikube /usr/local/bin/



#docker run --name portainer-builder -p 2345:2345 -d --rm -v /home/simon/Work/vs/portainer:/portainer -v /home/simon/Work/vs/data/ce:/data mcpacino/portainer-builder:latest
#
#
#docker network create --driver=bridge --subnet=192.168.100.0/24 --gateway=192.168.100.1 portainer-builder
#
#
#go install github.com/go-delve/delve/cmd/dlv@latest
#apt install psmis
#apt install tmux
#
#cd /portainer/api/cmd/portainer
#go build --installsuffix cgo --ldflags="" -gcflags=""  -o /portainer/dist/portainer  .
#cp /portainer/dist/portainer /app/
#
#cd /app
#./portainer --data /data --assets /app
#dlv --listen=0.0.0.0:2345 --headless=true --api-version=2 --check-go-version=false --only-same-user=false exec /app/portainer -- --data /data
#
#
#
#{
#            "name": "Remote",
#            "type": "go",
#            "request": "launch",
#            "mode": "remote",
#            "remotePath": "/app/portainer",
#            "port": 2345,
#            "host": "10.142.114.150",
#            "program": "C:\\Users\\EricS\\go\\src\\test-struct",
#            "env": {}
#}
#
#
#docker network create --driver=bridge --subnet=192.168.100.0/24 --gateway=192.168.100.100 portainer-builder
#
#minikube start --driver=docker --memory=4g --nodes 1 --network portainer-builder --profile portainer-k8s
#
#docker run --privileged -d --rm --name portainer-docker --network portainer-builder --ip 192.168.100.3 docker:dind
#
#
#
#KIND_EXPERIMENTAL_DOCKER_NETWORK=portainer-builder kind create cluster --name portainer-k8s
#sed -i 's/old-text/new-text/g'
#
#
